DAA LAB 3
Name: - Anushri Thakre
Roll No: - 242011060
Aim: Implement the Insertion Sort algorithm using recursion.
Code:
import time
def recursive_insertion_sort(arr, n, comparisons_swaps):
if n <= 1:
return
recursive_insertion_sort(arr, n - 1, comparisons_swaps)
last = arr[n - 1]
j=n-2
while j >= 0 and arr[j] > last:
comparisons_swaps['comparisons'] += 1
arr[j + 1] = arr[j]
j -= 1
arr[j + 1] = last
if j != n - 2:
comparisons_swaps['swaps'] += 1
def recursive_insertion_sort_wrapper(arr):
comparisons_swaps = {'comparisons': 0, 'swaps': 0}
start_time = time.time_ns()
recursive_insertion_sort(arr, len(arr), comparisons_swaps)
end_time = time.time_ns()
duration = end_time - start_time
return comparisons_swaps['swaps'], comparisons_swaps['comparisons'], duration, arr
# Example usage
arr = [16, 1, 4, 2, 12, 9, 10, 3, 5, 24, 14, 20, 6, 23, 7, 25, 19, 18, 8, 22, 11, 17, 13, 15, 21]
print("Unsorted Array:", arr)
swaps, comparisons, duration, sorted_arr = recursive_insertion_sort_wrapper(arr.copy())
print("\nRecursive Insertion Sort Results:")
print("Sorted Array:", sorted_arr)
print("Swaps:", swaps)
print("Comparisons:", comparisons)
print("Time Taken (ns):", duration)
Output:

